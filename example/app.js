/*jslint node:true, nomen: true*/

'use strict';

var express = require('express'),
    expview = require('express-view'),
    Locator = require('locator'),
    LocatorHandlebars = require('../'), // require('locator-handlebars'), // add `locator-handlebars` to package.json
    loca = new Locator({ buildDirectory: 'build' }),
    app = express();

// mounting locator instance into express app so other components can use the filesystem abstraction
app.set('locator', loca);
// this will signal express-view to use templates/page.handlebars as the layout template
app.set('layout', 'page');

// extend express app with express-view functionalities
expview.extend(app);

// serving static file from build folder, which is generated by locator's plugins
app.use('/static', express.static('./build'));

// creating a page with YUI embeded
app.get('/', function (req, res, next) {
    res.render('bar', {
        tagline: 'rendering template bar at the server side'
    });
});

loca.plug(new LocatorHandlebars({ format: 'yui' }))
    .parseBundle(__dirname, {}).then(function () {

        // listening for traffic only after locator finishes the walking process
        app.listen(3000, function () {
            console.log("Server listening on port 3000");
        });

    }, function (err) {
        console.error(err);
        console.error(err.stack);
    });
